ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
          serviceName: ""
          servicePort: 8080
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

tsm0:
  # Default values for tsm-node.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1
  index: 0

  config:
    # -- the TSM configuration file that will be mounted into the TSM node.  MUTUALLY EXCLUSIVE with configSecretName
    configFile: ""
    # -- The name of the secret containing the TSM configuration file. MUTUALLY EXCLUSIVE with configFile
    configSecretName: ""

  image:
    # -- Image to use for deploying the TSM node
    repository: ""
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 2000
    # allowPrivilegeEscalation: false
    # seccompProfile:
    #   type: "RuntimeDefault"

  # -- The primary service definition for the TSM node
  sdkService:
    type: ClusterIP

  # -- Optional. Only used for flexibility to expose the mpc port outside of the cluster.
  mpcService: {}

  ingress:
    enabled: false

  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Additional volumes on the output Deployment definition.
  volumes: []

  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # -- Additional volumeMounts on the output Deployment definition.
  volumeMounts: []

  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

tsm1:
  # Default values for tsm-node.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1
  index: 1

  config:
    # -- the TSM configuration file that will be mounted into the TSM node.  MUTUALLY EXCLUSIVE with configSecretName
    configFile: ""
    # -- The name of the secret containing the TSM configuration file. MUTUALLY EXCLUSIVE with configFile
    configSecretName: ""

  image:
    # -- Image to use for deploying the TSM node
    repository: ""
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 2000
    # allowPrivilegeEscalation: false
    # seccompProfile:
    #   type: "RuntimeDefault"

  # -- The primary service definition for the TSM node
  sdkService:
    type: ClusterIP

  # -- Optional. Only used for flexibility to expose the mpc port outside of the cluster.
  mpcService: {}

  ingress:
    enabled: false

  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Additional volumes on the output Deployment definition.
  volumes: []

  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # -- Additional volumeMounts on the output Deployment definition.
  volumeMounts: []

  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

tsm2:
  # Default values for tsm-node.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1
  index: 2

  config:
    # -- the TSM configuration file that will be mounted into the TSM node.  MUTUALLY EXCLUSIVE with configSecretName
    configFile: ""
    # -- The name of the secret containing the TSM configuration file. MUTUALLY EXCLUSIVE with configFile
    configSecretName: ""

  image:
    # -- Image to use for deploying the TSM node
    repository: ""
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 2000
    # allowPrivilegeEscalation: false
    # seccompProfile:
    #   type: "RuntimeDefault"

  # -- The primary service definition for the TSM node
  sdkService:
    type: ClusterIP

  # -- Optional. Only used for flexibility to expose the mpc port outside of the cluster.
  mpcService: {}

  ingress:
    enabled: false

  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Additional volumes on the output Deployment definition.
  volumes: []

  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # -- Additional volumeMounts on the output Deployment definition.
  volumeMounts: []

  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}
